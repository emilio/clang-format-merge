#!/bin/bash
# This script just wraps git, setting up the 'clang-format-merge' handler. It
# should act like git for most purposes.
#
# Use this like |path/to/git-wrapper.sh rebase mozcentral|.

set -e

ROOT="$(git rev-parse --show-toplevel)"

function cleanup {
    if [ -n R_CONFIGS_SET ]; then
        echo "wrapper> Cleaning up configs" >&2
        git config --unset merge.clang-format.name
        git config --unset merge.clang-format.driver
        git config --unset merge.clang-format.recursive
    fi

    if [ -n R_GITATTRIBUTES ]; then
        echo "wrapper> Cleaning up $ROOT/.git/info/attributes" >&2
        rm "$ROOT/.git/info/attributes"
        if [ -f "$ROOT/.git/info/attributes".bak ]; then
            mv "$ROOT/.git/info/attributes".bak "$ROOT/.git/info/attributes"
        fi
    fi
}
trap cleanup EXIT

SOURCE="${BASH_SOURCE[0]}"
MERGE_DRIVER="$(dirname $SOURCE)/clang-format-merge"

# Updating git config to install merge driver
echo "wrapper> Setting Configs" >&2
git config merge.clang-format.name "clang-format driver"
git config merge.clang-format.driver "$MERGE_DRIVER %O %A %B %P"
git config merge.clang-format.recursive "binary"
R_CONFIGS_SET=1

# Write out gitattributes
if [ -f "$ROOT/.git/info/attributes" ]; then
    cp "$ROOT/.git/info/attributes" "$ROOT/.git/info/attributes.bak"
fi

echo "wrapper> Adding $ROOT/.git/info/attributes" >&2
cat >> "$ROOT/.git/info/attributes" <<EOF
*.cpp merge=clang-format
*.h   merge=clang-format
*.mm  merge=clang-format
EOF
R_GITATTRIBUTES=1

git "$@"
exit $?
